plugins {
    id 'java-library'
    id 'io.qameta.allure' version "2.12.0"
}

repositories {
    mavenCentral()
}
allure {
    report {
        version.set("2.29.1") //версия Allure Report (https://github.com/allure-framework/allure2)
    }
    adapter {
        aspectjWeaver.set(true) // обработка аннотации @Step
        frameworks {
            junit5 {
                adapterVersion.set("2.29.1") //версия Allure JUnit5 (https://github.com/allure-framework/allure-java)
            }
        }
    }
}
dependencies {
    testImplementation(
            "com.codeborne:selenide:7.6.0",
            "org.junit.jupiter:junit-jupiter:5.9.3",
            'io.qameta.allure:allure-selenide:2.19.0',
            "com.github.javafaker:javafaker:1.0.2",
            'org.assertj:assertj-core:3.26.3',
            'com.codeborne:pdf-test:1.9.1',
            'com.codeborne:xls-test:1.7.2',
            'com.opencsv:opencsv:5.9',
            'com.google.code.gson:gson:2.11.0',
    )
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

tasks.register('simple_test', Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}
tasks.register('remote_test', Test) {
    useJUnitPlatform {
        includeTags("remote")
    }
}
tasks.register('negative_test', Test) {
    useJUnitPlatform {
        includeTags("negative")
    }
}
tasks.register('positive_test', Test) {
    useJUnitPlatform {
        includeTags("positive")
    }
}
tasks.register('ignored_test', Test) {
    useJUnitPlatform {
        includeTags("ignored")
    }
}